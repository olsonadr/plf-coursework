excercise 1

1 { int x;                      -- start 1st block
2   int y;
3   y := 1;
4   { int f(int x) {            -- start 2nd block, start f() function
5       if x=0 then {
6         y := 1 }
7       else {
8         y := f(x-1)*y+1 };
9       return y;
10    };                        -- end f() function
11    x := f(2);
12  };                          -- end 2nd block
13 }                            -- end 1st block


exercise 2

1 { int x;                              -- start 1st block
2   int y;
3   int z;
4   x := 3;
5   y := 7;
6   { int f(int y) { return x*y };      -- start 2nd block, full f() function
7     int y;
8     y := 11;
9     { int g(int x) { return f(y) };   -- start 3rd block, full g() function
10      { int y;                        -- start 4th block
11        y := 13;
12        z := g(2);
13      };                              -- end 4th block
14    };                                -- end 3rd block
15  };                                  -- end 2nd block
16 }                                    -- end 1st block


exercise 3

1 { int y;              -- start 1st block
2   int z;
3   y := 7;
4   { int f(int a) {    -- start 2nd block, start f() function
5       y := a+1;
6       return (y+a)
7     };                -- end f() function
8     int g(int x) {    -- start g() function
9       y := f(x+1)+1;
10      z := f(x-y+3);
11      return (z+1)
12    }                 -- end g() function
13    z := g(y*2);
14  };                  -- end 2nd block
15 }                    -- end 1st block